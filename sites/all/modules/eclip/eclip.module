<?php

/**
 * Implements hook_init(). 
 */
function eclip_init(){
  drupal_add_library('system', 'ui.sortable');
  drupal_add_library('system', 'ui.button');    
  drupal_add_js(drupal_get_path('module', 'eclip') . '/js/eclip-admin.js');  
  drupal_add_js(array('eclip' => array('positions' => '')), 'setting');  
  drupal_add_css(drupal_get_path('module', 'eclip') . '/css/fresh.css');
  drupal_add_css(drupal_get_path('module', 'eclip') . '/css/eclip-admin.ctools.css');
}

/**
 * Implements hook_menu().
 */
function eclip_menu() {
  $items['adm/eclip/%node/add'] = array(
    'title' => 'Nuevo e-clip',
    'page callback' => 'eclip_build_add_clip_page',
    'page arguments' => array(2, 'add'),
    'access arguments' => array('administer clips'),
    'type' => MENU_CALLBACK,
    'file' => 'eclip.admin.inc',
  );
  $items['adm/eclip/%node/edit'] = array(
    'title' => 'Editar e-clip',
    'page callback' => 'eclip_build_add_clip_page',
    'page arguments' => array(2, 'edit'),
    'access arguments' => array('administer clips'),
    'type' => MENU_CALLBACK,
    'file' => 'eclip.admin.inc',
  );
  $items['adm/eclip/cliente/%node/add'] = array(
    'title' => 'Agregar clip por cliente',
    'page callback' => 'eclip_build_add_clip_cliente_page',
    'page arguments' => array(3, 'add'),
    'access arguments' => array('administer clips'),
    'type' => MENU_CALLBACK,
    'file' => 'eclip.admin.inc',
  );
  $items['adm/eclip/cliente/%node/edit'] = array(
    'title' => 'Editar clip por cliente',
    'page callback' => 'eclip_build_add_clip_cliente_page',
    'page arguments' => array(3, 'edit'),
    'access arguments' => array('administer clips'),
    'type' => MENU_CALLBACK,
    'file' => 'eclip.admin.inc',
  );
  $items['adm/news/%node/view'] = array(
    'title' => 'Noticia',
    'page callback' => 'eclip_build_view_news_page',
    'page arguments' => array(2, 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['adm/%ctools_js/%/add/group'] = array(
    'title' => 'Add group by category',
    'page callback' => 'eclip_add_group',
    'page arguments' => array(1, 2),
    'access arguments' => array('administer clips'),
    'type' => MENU_CALLBACK,
  );  
  $items['test'] = array(
    'title' => 'test',
    'page callback' => 'eclip_test_page',
    //'page arguments' => array('eclip_upload_image'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );  
  return $items;
}

/**
 * Implements hook_permission().
 */
function eclip_permission() {
  return array(
    'administer clips' => array(
      'title' => t('Administer clips'),
      'description' => t('Add, edit, remove clips.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function eclip_theme() {
  $return = array();
  $themes = _eclip_get_all_templates();
  foreach ($themes as $theme) {
    $return[$theme->field_machine_name_value] =
        array(
          'template' => $theme->field_machine_name_value, // your template file called custompage.tpl.php
          'variables' => array('op' => null, 'node' => null, 'colores' => null),
    );
    $return[$theme->field_email_template_value] =
        array(
          'template' => str_replace('_', '-', $theme->field_email_template_value), // your template file called custompage.tpl.php
          'variables' => array('op' => null, 'node' => null, 'colores' => null),
    );
  }
  $return['news_category'] = array(
    'template' => 'templates/news-category',
    'variables'   => array(
      'email'     => false,
      'titulo'    => null, 
      'noticias'  => null,
      'colores'   => null,
      'limit'     => null,
    ),
  );  
  $return['news_item'] = array(
    'template' => 'templates/news-item',
    'variables' => array(
      'article_id' => null,
      'show_image' => 1,
      'email'   => false,
      'titulo'  => null, 
      'link'    => null,
      'medio'   => null,
      'bajada'  => null,
      'fecha'   => null,
      'imagen'  => null,
      'colores' => null,
    ),
  );
  $return['news_related'] = array(
    'template' => 'templates/news-related',
    'variables' => array(
      'article_id'  => null, 
      'colores' => null,
    ),
  );
  $return['test_email'] = array(
    'template' => 'templates/test-email',
  );   
  return $return;
}

/**
 * Implements hook_node_delete().
 */
function eclip_node_delete($node) {
  db_delete('eclip_cat_data')
      ->condition('clip_nid', $node->nid)
      ->execute();
  db_delete('eclip_highlighted')
      ->condition('clip_nid', $node->nid)
      ->execute();
  db_delete('eclip_article_data')
      ->condition('clip_nid', $node->nid)
      ->execute();
}

/**
 * Implements hook_views_query_alter()
 */
function eclip_views_query_alter(&$view, &$query) {
  if ($view->name == 'embed_articulos') {
    if (isset($query->where[0])) {
      $full_date = array_keys($query->where[0]['conditions'][1]['value']);
      $full_date1 = array_keys($query->where[0]['conditions'][2]['value']);
      
      //watchdog('query', print_r($full_date1, 1));
      $query->where[0]['conditions'][1]['field'] = "DATE_FORMAT((DATE_ADD('19700101', INTERVAL node.created SECOND) + INTERVAL -10800 SECOND), '%Y%m%d%H%i') >= " . $full_date[0];
      $query->where[0]['conditions'][2]['field'] = "DATE_FORMAT((DATE_ADD('19700101', INTERVAL node.created SECOND) + INTERVAL -10800 SECOND), '%Y%m%d%H%i') <= " . $full_date1[0];
    }
    watchdog('query', print_r($query->where, 1));
  }
}

/**
 * Implements hook_views_api().
 */
function eclip_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'eclip'),
  );
}

/**
 * Page callback to display links and render a container for AJAX stuff.
 */
function eclip_test_page() {
  $node = node_load(12213);
  $message = array(
    'from'    => 'info@eclip.com',
    'to'      => 'gerardocadau@gmail.com',
    'subject' => 'test',    
    'body'    => theme('test_email'),
    'headers' => array('Content-Type' => 'text/html; charset=UTF-8'),   //needed
  ); 

  $system = drupal_mail_system('eclip', 'key');

  if($system->mail($message)){
    drupal_set_message('Sent.');  
  }else{
    drupal_set_message('Fail.', 'error');  
  }
  $output = theme('test_email');
  //dpm($output);
  //return 'hola';
  return $output;
  //return views_embed_view('todos_los_articulos', 'default', 39, '20130101', '20500101');
}

/**
 * Helper, build news by zone
 */
function _eclip_build_news_by_zone($news, $zone) {
  $output = '';
  //dpm($news);
  if (isset($news[$zone])) {
    //dpm($news[$zone]);
    foreach ($news[$zone] as $cat_tid => $new) {
      $output.= '<h2 class="category-title">' . $new['name'] . '</h2>';
      //dpm($new);
      $output.= views_embed_view('front_get_news', 'default', $cat_tid, $new['clip_nid'], $new['news']);
    }
  }
  return $output;
}

/**
 * Helper, build news by zone
 */
function _eclip_build_news_email_destacados_1($nid, $url_prefix, $args = array()) {
  $output = '';
  isset($args['category_background']) ? $category_background = $args['category_background'] : $category_background = 'transparent';
  isset($args['category_color'])      ? $category_color = $args['category_color'] : $category_color = '#000';
  isset($args['link_color'])          ? $link_color = $args['link_color'] : $link_color = '#000';  
  $result = views_get_view_result('front_destacados', 'default', $nid);
  foreach ($result as $key => $item) {
    if($key == 5) break;
    $path = 'clip/' . $url_prefix . '/' . $item->eclip_article_data_clip_nid . '/' . $item->article_data_id;
    isset($item->field_field_medio[0]['rendered']['#markup']) ? $medio = $item->field_field_medio[0]['rendered']['#markup'] : $medio = '';
    isset($item->field_body[0]['raw']['value']) ? $bajada = $item->field_body[0]['raw']['value'] : $bajada = '';
    isset($item->field_field_fecha[0]['rendered']['#markup']) ? $fecha = $item->field_field_fecha[0]['rendered']['#markup'] : $fecha = '';
    isset($item->node_eclip_article_data_title) ? $title = l($item->node_eclip_article_data_title, $path, array('absolute' => TRUE, 'attributes' => array('style' => 'text-decoration: none; color: ' . $link_color))) : $title = '';

    $output.= '<h3 style="font-size: 15px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $title . '</h3>';
    $output.= '<strong style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $medio . '</strong> - ';
    $output.= '<span style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">'  .  $fecha . '</span>';
    $output.= '<div style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $bajada . '</div>';
  }  
  return $output;
}

/**
 * Helper, build news by zone
 */
function _eclip_build_news_email_destacados_2($nid, $url_prefix, $args = array()) {
  $output = '';
  isset($args['category_background']) ? $category_background = $args['category_background'] : $category_background = 'transparent';
  isset($args['category_color'])      ? $category_color = $args['category_color'] : $category_color = '#000';
  isset($args['link_color'])          ? $link_color = $args['link_color'] : $link_color = '#000';
  isset($args['borde_zona'])          ? $borde_zona = $args['borde_zona'] : $borde_zona = 'transparent';
  $result = views_get_view_result('front_destacados', 'block_2', $nid);
  if(!empty($result)){
    $output.= '<tr>';
    $output.= '<td style="border-bottom: 2px solid ' . $borde_zona . ';">';
    $output.= '<table>';
    $output.= '<tr>';
    foreach ($result as $key => $item) {
      $path = 'clip/' . $url_prefix . '/' . $item->eclip_article_data_clip_nid . '/' . $item->article_data_id;
      isset($item->field_field_medio[0]['rendered']['#markup']) ? $medio = $item->field_field_medio[0]['rendered']['#markup'] : $medio = '';
      isset($item->field_body[0]['raw']['value']) ? $bajada = $item->field_body[0]['raw']['value'] : $bajada = '';
      isset($item->field_field_fecha[0]['rendered']['#markup']) ? $fecha = $item->field_field_fecha[0]['rendered']['#markup'] : $fecha = '';
      isset($item->node_eclip_article_data_title) ? $title = l($item->node_eclip_article_data_title, $path, array('absolute' => TRUE, 'attributes' => array('style' => 'text-decoration: none; color: ' . $link_color))) : $title = '';
      if($key == 0){
        $output.= '<td style="vertical-align: top; width:33%;">';
      } else {
        $output.= '<td style="vertical-align: top; border-left: 2px solid ' . $borde_zona . '; width:33%;">';
      }      
      $output.= '<h3 style="font-size: 15px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $title . '</h3>';
      $output.= '<strong style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $medio . '</strong> - ';
      $output.= '<span style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">'  .  $fecha . '</span>';
      $output.= '<div style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $bajada . '</div>';
      $output.= '</td>';
    }
    $output.= '</tr>';
    $output.= '</table>';
    $output.= '</td>';
    $output.= '</tr>';
  } 
  return $output;
}

/**
 * Helper, build news by zone
 */
function _eclip_build_news_email_by_zone($news, $zone, $url_prefix, $args = array()) {
  $output = '';
  isset($args['category_background']) ? $category_background = $args['category_background'] : $category_background = 'transparent';
  isset($args['category_color'])      ? $category_color = $args['category_color'] : $category_color = '#000';
  isset($args['category_border'])     ? $category_border = $args['category_border'] : $category_border = 'transparent';
  isset($args['link_color'])          ? $link_color = $args['link_color'] : $link_color = '#000';
  isset($args['limite'])              ? $limite = $args['limite'] : $limite = 5;
  if (isset($news[$zone])) {
    //dpm($news[$zone]);
    foreach ($news[$zone] as $cat_tid => $new) {
      $output.= '<h2 style="font-size: 20px; font-family: \'Trebuchet MS\', Helvetica, Arial; width: 98%; padding: 2px 1%; background-color:' . $category_background  . '; color: ' . $category_color . '; border-bottom: 2px solid ' . $category_border . ';">' . $new['name'] . '</h2>';
      //dpm($new);
      $result = views_get_view_result('front_get_news', 'default', $cat_tid, $new['clip_nid'], $new['news']);
      foreach ($result as $key => $item) {
        if($key == (int)$limite) {       
          break;
        }
        $medio  = isset($item->field_field_medio[0]['rendered']['#markup']) ? $item->field_field_medio[0]['rendered']['#markup'] : '';
        $fuente = isset($item->field_field_fuente[0]['rendered']['#markup']) ? $item->field_field_fuente[0]['rendered']['#markup'] : '';
        if(!$medio){ $medio = $fuente;}     
        $path   = 'clip/' . $url_prefix . '/' . $item->eclip_article_data_clip_nid . '/' . $item->article_data_id;
        isset($item->field_field_server_destacado[0]['raw']['url']) ? $imagen = _eclip_get_url_file($item->field_field_server_destacado[0]['raw']['url']) : $imagen = false;
        isset($item->field_body[0]['raw']['value']) ? $bajada = $item->field_body[0]['raw']['value'] : $bajada = '';
        isset($item->field_field_fecha[0]['rendered']['#markup']) ? $fecha = $item->field_field_fecha[0]['rendered']['#markup'] : $fecha = '';
        isset($item->node_eclip_article_data_title) ? $title = l($item->node_eclip_article_data_title, $path, array('absolute' => TRUE,'attributes' => array('style' => 'font-size: 15px; text-decoration: none; color: ' . $link_color))) : $title = '';        
        $output.= '<h3 style="font-size: 15px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $title . '</h3>';     
        $output.= '<strong style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $medio . '</strong> - ';
        $output.= '<span style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">'  .  $fecha . '</span>';
        if($imagen){
          $output.= '<div><img src="' . $imagen . '" alt="imagen destacada" /></div>';
        }        
        $output.= '<div style="font-size: 12px; font-family: \'Trebuchet MS\', Helvetica, Arial;">' . $bajada . '</div>';
      }
      $output.= '<div style="padding-top:10px; text-align: right;">' . l('[+noticias]', 'clip/' . $url_prefix . '/' . $new['clip_nid'], array('absolute' => TRUE, 'attributes' => array('style' => 'text-decoration: none; font-family: \'Trebuchet MS\', Helvetica, Arial; color:' . $link_color))) . '</div>';
      //dpm($result);
    }
  }
  return $output;
}


/**
 * Helper. Get all news by clip 
 */
function _eclip_get_news_by_clip($nid) {
  $query = db_select('eclip_article_data', 'a');
  $query->leftJoin('eclip_cat_data', 'c', 'c.cat_tid = a.cat_tid');
  $query
      ->fields('a', array('article_id', 'grupo', 'weight'))
      ->fields('c', array('cat_tid'))
      ->condition('a.clip_nid', $nid)
      ->condition('a.status', '1')
      ->condition('c.clip_nid', $nid)
//      ->groupBy('a.article_id')
//      ->distinct()
      ->orderBy('c.priority', 'DESC');
  $result = $query->execute()->fetchAll();
  $clips = array();
  //dpm($result);
  // Vericando que no haya notas repetidas y agrupandolas por categoria
  foreach ($result as $value) {
    if(!in_array($value->article_id, $clips)){
        $articles[$value->cat_tid][] = $value;
        $clips[] = $value->article_id;
    }    
  }
  // limpiando 
  if(isset($articles) && !empty($articles)) {
    foreach ($articles as $key_categories => $categories) {
      $grupos = array();
      foreach ($categories as $key_news => $news) {
        if ($news->grupo != '0' && in_array($news->grupo, $grupos)) {
          unset($articles[$key_categories][$key_news]);
        } else {
          $args[$key_categories][] = $news->article_id;
        }
        //$grupo = $news->grupo;
        $grupos[] = $news->grupo;        
      }
    }
    $query = db_select('eclip_cat_data', 'c');
    $query->leftJoin('taxonomy_term_data', 't', 'c.cat_tid = t.tid');
    $query
        ->fields('c', array('zone_id', 'cat_tid', 'clip_nid'))
        ->fields('t', array('name'))
        ->condition('c.clip_nid', $nid)
        ->orderBy('c.weight');
    $result = $query->execute()->fetchAll();
    $categories = array();
    foreach ($result as $value) {
      //dpm($value);
      if(isset($args[$value->cat_tid])){
          $categories[$value->zone_id][$value->cat_tid]['name'] = $value->name;
          $categories[$value->zone_id][$value->cat_tid]['clip_nid'] = $value->clip_nid;
          $categories[$value->zone_id][$value->cat_tid]['news'] = implode('+', $args[$value->cat_tid]);        
      }
    }
    return $categories;
  }
}

/**
 * Helper, get all templates
 */
function _eclip_get_all_templates() {
  $query = db_select('node', 'n');
  $query->innerJoin('field_data_field_machine_name', 'm', 'm.entity_id = n.nid AND (m.entity_type = :type AND m.deleted = :deleted)', array(':type' => 'node', ':deleted' => 0));
  $query->innerJoin('field_data_field_email_template', 'e', 'e.entity_id = n.nid AND (e.entity_type = :type AND e.deleted = :deleted)', array(':type' => 'node', ':deleted' => 0));
  $query
      ->fields('n', array('nid', 'title'))
      ->fields('m', array('field_machine_name_value'))
      ->fields('e', array('field_email_template_value'))
      ->condition('n.type', 'template')
      ->condition('n.status', '1');
  return $query->execute()->fetchAll();
}

/**
 * Get last client clip 
 */
function _eclip_get_last_clip_by_customer($customer_id) {
  $query = db_select('node', 'n');
  $query->innerJoin('field_data_field_cliente', 'customer', 'customer.entity_id = n.nid AND (customer.entity_type = :type AND customer.deleted = :deleted)', array(':type' => 'node', ':deleted' => 0));
  $query
      ->fields('n', array('nid'))
      ->condition('n.type', 'clip')
      ->condition('n.status', '1')
      ->condition('customer.field_cliente_target_id', $customer_id)
      ->orderBy('n.created', 'DESC');
  return $query->execute()->fetch();
}

/**
 * Get last client clip 
 */
function _eclip_get_positions_by_clip($clip_nid) {
  $query = db_select('eclip_cat_data', 'c');
  $query
      ->fields('c', array('cat_tid', 'zone_id', 'priority', 'weight'))
      ->condition('c.clip_nid', $clip_nid)
      ->orderBy('zone_id')
      ->orderBy('weight');
  return $query->execute()->fetchAll();
}

/**
 * Helper, get all customers
 */
function _eclip_get_all_customers() {
  $query = db_select('node', 'n');
  $query
      ->fields('n', array('nid', 'title'))
      ->condition('n.type', 'cliente')
      ->condition('n.status', '1');
  return $query->execute()->fetchAll();
}

/**
 * Helper, get customers by group
 */
function _eclip_get_customers_by_group($tid = '') {
  if ($tid) {
    $query = db_select('node', 'n');
    $query->innerJoin('field_data_field_grupo', 'grupo', 'grupo.entity_id = n.nid AND (grupo.entity_type = :type AND grupo.deleted = :deleted)', array(':type' => 'node', ':deleted' => 0));
    $query
        ->fields('n', array('nid', 'title'))
        ->condition('n.type', 'cliente')
        ->condition('n.status', '1')
        ->condition('grupo.field_grupo_tid', $tid);
  } else {
    $query = db_select('node', 'n');
    $query
        ->fields('n', array('nid', 'title'))
        ->condition('n.type', 'cliente')
        ->condition('n.status', '1');
  }
  return $query->execute()->fetchAll();
}

/**
 * Helper, get all groups
 */
function _eclip_get_all_groups() {
  return taxonomy_get_tree(4);
}

/**
 * Helper, get all categories
 */
function _eclip_get_all_categories() {
  return taxonomy_get_tree(2);
}

/**
 * Returns a array for use with #options in a form field
 */
function _eclip_get_taxonomy_options($machine_name) {
  $options    = array();
  $vocabulary = taxonomy_vocabulary_machine_name_load($machine_name);
  $tree       = taxonomy_get_tree($vocabulary->vid);
  foreach ($tree as $item) {
    $options[$item->tid] = str_repeat('-', $item->depth) . $item->name;
  }
  return $options;
}

/**
 * Add new node modal window
 */
function eclip_build_view_news_page($node = NULL) {
  //$contents = render(node_view($node));
  $content = views_embed_view('preview_new', 'default', $node->nid);
  return $content;
}

/**
 * Add new group of related news
 */
function eclip_add_group($type = 'ajax', $tid = '') {
  if ($type) {
    $output = '<div class="news-content news-group"><span class="close-group ui-icon ui-icon-circle-close"></span></div>';
    $commands = array();
    // See ajax_example_advanced.inc for more details on the available commands
    // and how to use them.
    $commands[] = ajax_command_append('.category-' . $tid . ' .view-content', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return MENU_ACCESS_DENIED;
  }
}

function _theme_destacado(&$destacados, $start = 0, $limit = 3, $colores, $email = false){
  $output = '';
  for ($i = $start; $i < $start + $limit; $i++) { 
    if(isset($destacados[$i])){
      $noticia = array(
        'article_id' => $destacados[$i]->article_id,
        'show_image' => $destacados[$i]->show_image,
        'email'   => $email,
        'titulo'  => $destacados[$i]->titulo, 
        'link'    => $destacados[$i]->environment . '/' . $destacados[$i]->space . '/' . $destacados[$i]->clip_nid . '/' . $destacados[$i]->article_id,
        'medio'   => $destacados[$i]->medio ? $destacados[$i]->medio : $destacados[$i]->fuente,
        'bajada'  => $destacados[$i]->bajada,
        'fecha'   => format_date(strtotime($destacados[$i]->fecha), 'largo_sin_hora'),
        'imagen'  => $destacados[$i]->imagen,
        'colores' => $colores,
      );      
      $output.= theme('news_item', $noticia);   
    }    
  }
  return $output;
}

function _theme_categoria($news, $zone, $colores, $email = false){
  $output   = '';
  if (isset($news[$zone])) {
    foreach ($news[$zone] as $cat_tid => $new) {;
      $noticias = array();
      $results  = views_get_view_result('front_get_news', 'default', $cat_tid, $new['clip_nid'], $new['news']);
      foreach ($results as $key => $result_item) {
          $medio  = isset($result_item->field_field_medio[0]['rendered']['#markup']) ? $result_item->field_field_medio[0]['rendered']['#markup'] : '';
          $fuente = isset($result_item->field_field_fuente[0]['rendered']['#markup']) ? $result_item->field_field_fuente[0]['rendered']['#markup'] : '';
          //dpm($result_item);
          $noticia = array(
            'article_id' => $result_item->article_data_id,
            'show_image' => $result_item->eclip_article_data_image,
            'email'   => $email,
            'titulo'  => $result_item->node_eclip_article_data_title,
            'link'    => arg(0) . '/' . arg(1) . '/' . $result_item->eclip_article_data_clip_nid . '/' . $result_item->article_data_id,
            'medio'   => $medio ? $medio : $fuente,
            'bajada'  => isset($result_item->field_body[0]['rendered']['#markup']) ? $result_item->field_body[0]['rendered']['#markup'] : '',
            'fecha'   => isset($result_item->field_field_fecha[0]['raw']['value']) ? format_date(strtotime($result_item->field_field_fecha[0]['raw']['value']), 'largo_sin_hora') : '',
            'imagen'  => isset($result_item->field_field_server_destacado[0]['raw']['url']) ? _eclip_get_url_file($result_item->field_field_server_destacado[0]['raw']['url']) : '',
            'colores' => $colores,
          );
          $noticias[] = $noticia;
      }
      $output.= theme('news_category', array('email' => $email, 'titulo' => $new['name'], 'noticias' => $noticias, 'colores' => $colores));
    }
  }
  return $output;
}

/**
 * Preprocess function
 */
function template_preprocess_news_related(&$variables){
  $clip     = eclip_load($variables['article_id']);
  $related  = eclip_get_related_news($clip);
  $variables['relacionadas'] = array();
  if(!empty($related)){
    foreach ($related as $noticia) {
      $variables['relacionadas'][] = l($noticia->title . ' - (' . $noticia->name . ')', 'clip/' . arg(1) . '/' . $noticia->clip_nid . '/' . $noticia->article_data_id, array('absolute' => TRUE, 'attributes' => array('style' => 'display:block; margin-top: 5px; color:' . $variables['colores']['link_color'] . '; text-decoration:' . $variables['colores']['title_decoration'] . '; font-family
  :' . $variables['colores']['title_font'])));
    }
  }
}


/**
 * Preprocess function
 */
function template_preprocess_email_01(&$variables){
  _custom_prepare_email_vars($variables);
}

/**
 * Preprocess function
 */
function template_preprocess_email_02(&$variables){
  _custom_prepare_email_vars($variables);
}

/**
 * Preprocess function
 */
function template_preprocess_email_03(&$variables){
  _custom_prepare_email_vars($variables);
}

/**
 * Preprocess function
 */
function template_preprocess_email_04(&$variables){
  _custom_prepare_email_vars($variables);
}

/**
 * Preprocess function
 */
function template_preprocess_email_05(&$variables){
  $cliente = node_load($variables['node']->field_cliente['und'][0]['target_id']);
  
  $variables['colores']['body_background'] = _eclip_theme_render_field($cliente, $cliente->field_background_color, 'field_background_color');
  $variables['colores']['category_background'] = _eclip_theme_render_field($cliente, $cliente->field_category_background, 'field_category_background');
  $variables['colores']['liston_color'] = _eclip_theme_render_field($cliente, $cliente->field_liston_color, 'field_liston_color');
  $variables['colores']['category_color'] = _eclip_theme_render_field($cliente, $cliente->field_category_color, 'field_category_color');
  $variables['colores']['link_color'] = _eclip_theme_render_field($cliente, $cliente->field_link_color, 'field_link_color');
  $variables['colores']['background_color_inner'] = _eclip_theme_render_field($cliente, $cliente->field_background_color_inner, 'field_background_color_inner');
  $variables['colores']['font_color'] = _eclip_theme_render_field($cliente, $cliente->field_font_color, 'field_font_color');
  $variables['colores']['image_border'] = _eclip_theme_render_field($cliente, $cliente->field_image_border, 'field_image_border');
  $variables['colores']['page_border'] = _eclip_theme_render_field($cliente, $cliente->field_page_border, 'field_page_border');
  $variables['colores']['news_border'] = _eclip_theme_render_field($cliente, $cliente->field_news_border, 'field_news_border');
  $variables['colores']['background_footer'] = _eclip_theme_render_field($cliente, $cliente->field_background_footer, 'field_background_footer');
  $variables['colores']['footer_color'] = _eclip_theme_render_field($cliente, $cliente->field_footer_color, 'field_footer_color');
  $variables['colores']['borde_zona'] = _eclip_theme_render_field($cliente, $cliente->field_borde_zona, 'field_borde_zona'); 
  $variables['colores']['borde_inferior_destacado'] = _eclip_theme_render_field($cliente, $cliente->field_borde_inferior_destacado, 'field_borde_inferior_destacado');
  $variables['colores']['borde_destacado'] = _eclip_theme_render_field($cliente, $cliente->field_borde_destacado, 'field_borde_destacado');
  $variables['colores']['title_font']   = '';
  $variables['colores']['title_size']   = '';
  $variables['colores']['title_weight'] = '';
  $variables['colores']['title_decoration']  = 'none';

  $variables['url_prefix']          = isset($cliente->field_hash['und'][0]['value']) ? $cliente->field_hash['und'][0]['value'] : '';
  $variables['footer']              = isset($cliente->field_footer['und'][0]['value']) ? $cliente->field_footer['und'][0]['value'] : '';  
  $variables['header']              = theme_image(array('path' => $cliente->field_header['und'][0]['uri'], 'attributes' => array()));
  $variables['imagen_destacado']    = isset($variables['node']->field_imagen_destacado['und'][0]['uri']) ? theme_image_style(array('style_name' => 'destacado', 'path' => $variables['node']->field_imagen_destacado['und'][0]['uri'], 'attributes' => array('style' => 'border: 2px solid ' . $variables['image_border']), 'width' => NULL, 'height' => NULL)) : '';
  $variables['limite'] = isset($variables['node']->field_limite['und'][0]['value']) ? $variables['node']->field_limite['und'][0]['value'] : 5;

  $destacados = views_get_view_result('front_destacados', 'todos', $variables['node']->nid);  
  foreach ($destacados as $destacado) {
    $medio  = isset($destacado->field_field_medio[0]['rendered']['#markup']) ? $destacado->field_field_medio[0]['rendered']['#markup'] : '';
    $fuente = isset($destacado->field_field_fuente[0]['rendered']['#markup']) ? $destacado->field_field_fuente[0]['rendered']['#markup'] : '';
    $noticia = new stdClass();
    $noticia->titulo  = $destacado->node_eclip_article_data_title;
    $noticia->show_image  = $destacado->eclip_article_data_image;
    $noticia->clip_nid    = $destacado->eclip_article_data_clip_nid;
    $noticia->article_id  = $destacado->article_data_id;
    $noticia->environment = 'clip';
    $noticia->space       = $variables['url_prefix'];
    $noticia->medio   = $medio ? $medio : $fuente;
    $noticia->bajada  = isset($destacado->field_body[0]['rendered']['#markup']) ? $destacado->field_body[0]['rendered']['#markup'] : '';
    $noticia->fecha   = isset($destacado->field_field_fecha[0]['raw']['value']) ? $destacado->field_field_fecha[0]['raw']['value'] : '';
    $noticia->imagen  = isset($destacado->field_field_server_destacado[0]['raw']['url']) ? _eclip_get_url_file($destacado->field_field_server_destacado[0]['raw']['url']) : '';
    $variables['destacados'][] = $noticia;
  }  
}

/**
 * Helper. Prepare variables to render in email tpl
 */
function _custom_prepare_email_vars(&$variables){
  $cliente = node_load($variables['node']->field_cliente['und'][0]['target_id']);

  $variables['url_prefix'] = isset($cliente->field_hash['und'][0]['value']) ? $cliente->field_hash['und'][0]['value'] : '';  
  
  $variables['category_color']      = isset($cliente->field_category_color['und'][0]['rgb']) ? $cliente->field_category_color['und'][0]['rgb'] : '';
  $variables['category_background'] = isset($cliente->field_category_background['und'][0]['rgb']) ? $cliente->field_category_background['und'][0]['rgb'] : '';
  $variables['category_border']     = isset($cliente->field_liston_color['und'][0]['rgb']) ? $cliente->field_liston_color['und'][0]['rgb'] : '';
  $variables['background_color']    = isset($cliente->field_background_color['und'][0]['rgb']) ? $cliente->field_background_color['und'][0]['rgb'] : '';
  
  $variables['background_color_inner']  = isset($cliente->field_background_color_inner['und'][0]['rgb']) ? $cliente->field_background_color_inner['und'][0]['rgb'] : '';
  $variables['font_color']              = isset($cliente->field_font_color['und'][0]['rgb']) ? $cliente->field_font_color['und'][0]['rgb'] : '';
  $variables['link_color']              = isset($cliente->field_link_color['und'][0]['rgb']) ? $cliente->field_link_color['und'][0]['rgb'] : '';
  $variables['image_border']            = isset($cliente->field_image_border['und'][0]['rgb']) ? $cliente->field_image_border['und'][0]['rgb'] : 'transparent';
  
  $variables['page_border']         = isset($cliente->field_page_border['und'][0]['rgb']) ? $cliente->field_page_border['und'][0]['rgb'] : '';  
  $variables['news_border']         = isset($cliente->field_news_border['und'][0]['rgb']) ? $cliente->field_news_border['und'][0]['rgb'] : '';  
  $variables['borde_zona']          = isset($cliente->field_borde_zona['und'][0]['rgb']) ? $cliente->field_borde_zona['und'][0]['rgb'] : '';
  $variables['borde_inferior_destacado'] = isset($cliente->field_borde_inferior_destacado['und'][0]['rgb']) ? $cliente->field_borde_inferior_destacado['und'][0]['rgb'] : '';
  $variables['borde_destacado']     = isset($cliente->field_borde_destacado['und'][0]['rgb']) ? $cliente->field_borde_destacado['und'][0]['rgb'] : '';
  $variables['footer_color']        = isset($cliente->field_footer_color['und'][0]['rgb']) ? $cliente->field_footer_color['und'][0]['rgb'] : '';
  $variables['background_footer']   = isset($cliente->field_background_footer['und'][0]['rgb']) ? $cliente->field_background_footer['und'][0]['rgb'] : '';
  $variables['footer']              = isset($cliente->field_footer['und'][0]['value']) ? $cliente->field_footer['und'][0]['value'] : '';
  
  $variables['header']              = theme_image(array('path' => $cliente->field_header['und'][0]['uri'], 'attributes' => array()));
  $variables['imagen_destacado']    = isset($variables['node']->field_imagen_destacado['und'][0]['uri']) ? theme_image_style(array('style_name' => 'destacado', 'path' => $variables['node']->field_imagen_destacado['und'][0]['uri'], 'attributes' => array('style' => 'border: 2px solid ' . $variables['image_border']), 'width' => NULL, 'height' => NULL)) : '';  
  
  $variables['limite'] = isset($variables['node']->field_limite['und'][0]['value']) ? $variables['node']->field_limite['und'][0]['value'] : 5;
}

/**
 * Build dropdown for Clientes
 */
function _eclip_get_cliente_dropdown_options($tid = '') {
  $clientes = _eclip_get_customers_by_group($tid);
  $options = array();
  $options = array('' => t('Seleccionar'));
  foreach ($clientes as $cliente) {
    $options[$cliente->nid] = $cliente->title;
  }
  return $options;
}

/**
 * Build dropdown for grupos
 */
function _eclip_get_grupo_dropdown_options() {
  $grupos = _eclip_get_all_groups();
  $options = array();
  $options = array('' => t('Seleccionar'));
  foreach ($grupos as $grupo) {
    $options[$grupo->tid] = $grupo->name;
  }
  return $options;
}

/**
 * Implements hook_date_popup_process_alter()
 */
function eclip_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($element['#name'] == 'date_from') {
    $element['date']['#title'] = t('Desde');
    unset($element['date']['#description']);
    unset($element['time']['#description']);
  } elseif ($element['#name'] == 'date_to') {
    $element['date']['#title'] = t('Hasta');
    unset($element['date']['#description']);
    unset($element['time']['#description']);
  }
}

/**
 * Helper to delete positions of clips
 */
function _eclip_delete_positions($nid) {
  db_query('DELETE FROM {eclip_article_data} WHERE clip_nid = :nid', array(':nid' => $nid));
  db_query('DELETE FROM {eclip_cat_data} WHERE clip_nid = :nid', array(':nid' => $nid));
  db_query('DELETE FROM {eclip_highlighted} WHERE clip_nid = :nid', array(':nid' => $nid));
}

/**
 * Helper to save positions of clips
 */
function _eclip_save_positions($nid = null, $categories = array(), $news = array(), $highlighted = array()) {
  foreach ($categories as $category) {
    $cat_data_id = db_insert('eclip_cat_data')
        ->fields(array(
          'zone_id' => $category[0],
          'clip_nid' => $nid,
          'cat_tid' => $category[1],
          'weight' => $category[2],
          'priority' => $category[3],
        ))
        ->execute();
  }
  foreach ($news as $new) {
    $article_data_id = db_insert('eclip_article_data')
        ->fields(array(
          'cat_tid' => $new[0],
          'clip_nid' => $nid,
          'article_id' => $new[1],
          'weight' => $new[2],
          'status' => $new[3],
          'vote' => $new[4],
          'grupo' => $new[5],
          'highlighted' => 0,
          'image' => $new[6],
        ))
        ->execute();
  }
  foreach ($highlighted as $highlight) {
    $id = db_insert('eclip_article_data')
        ->fields(array(
          'cat_tid' => 0,
          'clip_nid' => $nid,
          'article_id' => $highlight[0],
          'weight' => $highlight[1],
          'status' => $highlight[2],
          'vote' => $highlight[3],
          'grupo' => 0,
          'highlighted' => 1,
          'image' => $highlight[4],
        ))
        ->execute();
  }
}

/**
 * Clipper load
 */
function eclip_load($id) {
  $query = db_select('eclip_article_data', 'a');
  $query
      ->fields('a')
      ->condition('a.article_data_id', $id);
  return $query->execute()->fetch();
}

/**
 * Build otros medios button 
 */
function eclip_build_otros_medios_link($article_data_id = NULL) {
  $output   = '';
  $links    = array();
  $clip     = eclip_load($article_data_id);
  $related  = eclip_get_related_news($clip);
  if(!empty($related)){
    $output.= '<div class="toggle-related-items" article="' . $article_data_id . '">';
    $output.= l(t('[Ver misma noticia en otros medios]'), '', array('external' => TRUE, 'fragment' => ' '));
    $output.= '</div>';
    $output.= '<div class="related-items" article="' . $article_data_id . '">';
    foreach ($related as $noticia) {
      $output.= '<div class="related-item">' . l($noticia->title . ' - (' . $noticia->name . ')', 'clip/' . arg(1) . '/' . $noticia->clip_nid . '/' . $noticia->article_data_id) . '</div>';
    }
    $output.= '</div>';
  }
  return $output;
}

function eclip_get_related_news($clip) {
  $query = db_select('eclip_article_data', 'a');
  $query->leftJoin('node', 'n', 'a.article_id = n.nid');
  $query->leftJoin('field_data_field_medio', 'm', 'm.entity_id = n.nid AND (m.entity_type = :type AND m.deleted = :deleted)', array(':type' => 'node', ':deleted' => 0));
  $query->leftJoin('taxonomy_term_data', 't', 't.tid = m.field_medio_tid');
  $query
      ->fields('a', array('article_data_id', 'clip_nid'))
      ->fields('n', array('title'))
      ->fields('t', array('name'))
      //->condition('a.clip_nid', $clip->clip_nid)
      ->condition('a.status', '1')
      ->condition('a.grupo', $clip->grupo)
      ->condition('a.grupo', 0, '<>')
      ->condition('a.cat_tid', $clip->cat_tid)
      ->condition('a.clip_nid', $clip->clip_nid)
      ->condition('a.article_data_id', $clip->article_data_id, '<>');
  return $query->execute()->fetchAll();
}

/**
* AJAX command to update positions in clip.
*/
function eclip_command_update_positions() {
  return array(
    'command' => 'update_positions',
  );
}

/**
 * Helper function to get the real url image
 */
function _eclip_get_url_file($path, $style = 'default'){
  return url('sites/default/files/upload/' . $path, array('absolute' => TRUE));
}

/**
 * Helper function to print images from url
 */
function _eclip_theme_file($url, $style = 'default', $download = true){    
    $url = url('sites/default/files/upload/' . $url, array('absolute' => TRUE));
    $image_types = array('image/jpg', 'image/jpeg', 'image/png', 'image/gif');
    $video_types = array('video/mp4');
    if(file_exists($url)){
        $mime = file_get_mimetype($url);
        
        if(in_array($mime, $image_types)){
            $output = '<div class="file-container">';
            $output.= theme('image', array('path' => $url));
            if($download){
              $output.= '<p style="text-align: right">' . l(t('Descargar imagen'), $url, array('attributes' => array('target' => '_blank'))) . '</p>';
            }
            $output.= '</div>';
            return $output;
        }
        if(in_array($mime, $video_types)){
            $preset = jw_player_preset_load('full_video');

            if(isset($preset['settings']['width']) && isset($preset['settings']['height'])){
                $output = '<div class="file-container">';
                $output.= theme('jw_player', array('file_url' => $url, 'width' => $preset['settings']['width'], 'height' => $preset['settings']['height']));
                if($download){
                  $output.= '<p style="text-align: right">' . l(t('Descargar video'), $url, array('attributes' => array('target' => '_blank'))) . '</p>';
                }
                $output.= '</div>';
                return $output;                
            }else{
                $output = '<div class="file-container">';
                $output.= theme('jw_player', array('file_url' => $url, 'width' => 600, 'height' => 450));
                if($download){
                  $output.= '<p style="text-align: right">' . l(t('Descargar video'), $url, array('attributes' => array('target' => '_blank'))) . '</p>';
                }
                $output.= '</div>';
                return $output;                
            }
        }        
    }
}

/** 
 * Helper function to build archive block
 */
function _eclip_build_archive_clips($hash){
    $output = '<div class="archive-block">';
    $output.= '<h2 class="archive-block-title category-title">' . t('Clipping anteriores') . '</h2>';
    //$output.= '<div class="archive-block-content">' . views_embed_view('helper_get_last_clips', 'default', $hash) . '</div>';
    $output.= '<div class="archive-block-footer">' . l('Ver clipping anteriores', 'clip/' . $hash . '/archivo') . '</div>';
    $output.= '</div>';
    return $output;
}

/**
 * Upload image form
 */
function eclip_upload_image($form, &$form_state) {
  $form = array();
  $form['file'] = array(
    '#type' => 'managed_file',
    '#name' => 'custom_content_block_image',
    '#title' => t('Block image'),
    '#size' => 40,
    '#description' => t("Image should be less than 400 pixels wide and in JPG format."),
    '#upload_location' => 'public://'
  );
  return $form;
}

/**
 * Submit handler for eclip_upload_image form
 */ 
function eclip_upload_image_submit($form, &$form_state) {
  if (isset($form_state['values']['custom_content_block_image'])) {
    $file = file_load($form_state['values']['custom_content_block_image']);

    $file->status = FILE_STATUS_PERMANENT;

    file_save($file);
  }
}

/**
 * Send clip via email
 */
function eclip_send_clip($node) {
  $from = 'info@e-clip.cl';
  $template       = node_load($node->field_theme['und'][0]['target_id']);
  $template_name  = $template->field_email_template['und'][0]['value'];
  $message = array(
    'id'      => 'clipper_key',
    'from'    => $from,
    //'to'      => 'gerardocadau@gmail.com',
    'to'      => 'clipping@e-clip.cl',
    'subject' => $node->title,    
    'body'    => theme($template_name, array('node' => $node, 'news' => _eclip_get_news_by_clip($node->nid))),
    'headers' => array(
    	'Content-Type' => 'text/html; charset=UTF-8',
      'From' => $from,
      'Sender' => $from,
      'Return-Path' => $from,
     ),   //needed
  ); 

  $system = drupal_mail_system('eclip', 'key');

  if($system->mail($message)){
    drupal_set_message('E-mail enviado.');  
  }else{
    drupal_set_message('No se ha podido enviar el E-mail.', 'error');  
  }
}

/**
 * Helper function to render a field
 */
function _eclip_theme_render_field($entity, $field, $field_name, $key = 0){
  $items = field_get_items('node', $entity, $field_name);
  if(isset($items[$key])){
    $value = field_view_value('node', $entity, $field_name, $items[$key]);
    return render($value);
  }
}